#!/usr/bin/env python3
"""
Test script for the refinement cycle implementation
"""

from src.client import AISuiteClient
from src.mcts import MCTS
from src.constants import DEFAULT_MODEL
from src.debug_utils import debug_printer

def test_refinement_cycle(debug=True):
    """Test the refinement cycle with max_iter=1"""
    print("🧪 Testing Refinement Cycle Implementation")
    print("="*50)
    
    # Initialize LLM client
    llm = AISuiteClient(model=DEFAULT_MODEL)
    
    # Initialize MCTS with max_iter=1 for one refinement iteration and debug mode
    mcts = MCTS(llm=llm, max_iter=1, debug=debug)
    
    # Run on twoSum problem
    problem_id = "twoSum"
    
    print(f"🎯 Running MCTS on problem: {problem_id}")
    print(f"📊 Max iterations: {mcts.max_iter}")
    print(f"🐛 Debug mode: {'ENABLED' if debug else 'DISABLED'}")
    print()
    
    # Run the MCTS process
    mcts.fit(problem_id)
    
    # Print final tree summary
    print("\n🌳 Final Tree Summary:")
    mcts.print_tree_summary()
    
    # Print detailed node information
    debug_printer.detailed_node_information(mcts)
    
    # Note: Comprehensive debug summary is now automatically generated by MCTS
    if debug:
        print("\n" + "="*80)
        print("🎉 COMPREHENSIVE DEBUG MODE COMPLETED!")
        print("="*80 + "\n")
    
    print("\n✅ Test completed!")
    print("="*80 + "\n")

def test_refinement_cycle_minimal():
    """Test without debug mode for cleaner output"""
    test_refinement_cycle(debug=False)

if __name__ == "__main__":
    # Run with debug mode by default
    test_refinement_cycle(debug=True)
    
    # Uncomment to run without debug mode
    # test_refinement_cycle_minimal() 